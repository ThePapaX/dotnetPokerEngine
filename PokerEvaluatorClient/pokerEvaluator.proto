// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "pokerEvaluator";
option java_outer_classname = "PokerEvaluatorProto";
option objc_class_prefix = "PKRE";

package pokerEvaluator;

// The service definition.
service Evaluator {
  // Sends a greeting
  rpc Evaluate (EvaluationRequest) returns (EvaluationResult) {}
}

// The request message containing command to evaluate
message EvaluationRequest {
  string command = 1;
}

// The response result 
message EvaluationResult {
  message PlayerEvaluationResult{
    enum HandType {
        NoPair = 0;
        OnePair = 1;
        TwoPair = 2;
        Trips = 3;
        Straight = 4;
        Flush = 5;
        FullHouse = 6;
        Quads = 7;
        StraightFlush = 8;
    }
    HandType handType = 1;
    double equityValue = 2;
    double winProbability = 3;
    /* 
    * cardOrder is the ordered player hand resulting from the evaluation from Hi to Lo.
    * The values are not cards.
    * If the result is two pairs, and example is (3 2 K), translate to pair of 3, pair of 2, and K high.
    * For 5 card results, for example Straight, will contain just the highest card. Eg (6), straight to the six.
    */
    repeated int32 cardOrder = 4; 
  }
  repeated PlayerEvaluationResult results = 1;
}
